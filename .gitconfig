[user]
	name = Martin Velev
	email = martin.velev@williamhill.com
[include]
        path = /Users/mvelev/Code/whc/dev_tools/scripts/git/gitconfig
[http]
	sslVerify = false

[pull]
    rebase = true
[rebase]
    autoStash = true  ; stashes local changes before rebase, if needed
[alias]
        stashtofile = "!stof () { _stash=$(git config --local remote.origin.url) || return 1; _stash=/tmp/${_stash##*/}.stash || return 1; _token=6c1372ce93186e7957cd299179b2ddf6308cc244; git stash save $_token > /dev/null || return 1; if git stash list | grep -q $_token; then git stash show -p stash@{0} > $_stash && git stash pop && echo && echo stashfile @ [$_stash]; else echo && echo nothing to stash; fi; }; stof"
        stashdrop = "!stshdrp () { _stash=$(git config --local remote.origin.url) || return 1; _stash=/tmp/${_stash##*/}.dropped.stash || return 1; _token=6c1372ce93186e7957cd299179b2ddf6308cc246; git stash save $_token > /dev/null || return 1; if git stash list | grep -q $_token; then git stash show -p stash@{0} > $_stash && git stash drop && echo && echo stashfile backed @ [$_stash]; else echo && echo nothing to stash; fi; }; stshdrp"
        stashunstaged = "!stshustgd () { if ! git commit -m 'chore: temp committing staged changes'; then echo && echo nothing staged && return 1; fi; git add . || return 1; git stash save 'unstaged files stash' > /dev/null || return 1; git reset --soft HEAD^; }; stshustgd"
        uncommit = "reset --soft HEAD~1"
        ac = "!git add -A && git commit"

        co = checkout
        p = push
        st = status

[color]
        ui = true
